name: Build and Release Nginx with Env Config

on:
  push:
    tags:
      - 'v*'  # 标签推送触发
  workflow_dispatch:  # 允许手动触发

env:
  # Nginx 版本配置
  NGINX_VERSION: 1.25.3
  # 在env内部引用其他环境变量时直接使用变量名，不需要${{ env. }}语法
  NGINX_DOWNLOAD_URL: http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz
  
  # RTMP模块配置
  RTMP_MODULE_REPO: https://github.com/arut/nginx-rtmp-module.git
  RTMP_MODULE_BRANCH: master
  
  # HTTP-FLV模块配置
  FLV_MODULE_REPO: https://github.com/winshining/nginx-http-flv-module.git
  FLV_MODULE_BRANCH: master
  
  # 构建输出目录
  BUILD_DIR: /c/nginx-build
  DIST_DIR: /c/nginx-build/dist
  ARTIFACT_NAME: nginx-windows-rtmp-hls-flv

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          base-devel
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-openssl
          mingw-w64-x86_64-pcre
          git
          wget
          
    - name: Prepare build environment
      shell: msys2 {0}
      run: |
        # 安装必要的工具
        pacman -S --noconfirm make automake libtool zlib-devel
        
        # 创建工作目录
        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        
        # 下载并解压Nginx源码
        echo "Downloading Nginx ${{ env.NGINX_VERSION }}..."
        wget ${{ env.NGINX_DOWNLOAD_URL }}
        tar -zxvf nginx-${{ env.NGINX_VERSION }}.tar.gz
        mv nginx-${{ env.NGINX_VERSION }} nginx
        
        # 克隆RTMP模块
        echo "Cloning RTMP module..."
        git clone -b ${{ env.RTMP_MODULE_BRANCH }} ${{ env.RTMP_MODULE_REPO }}
        
        # 克隆HTTP-FLV模块
        echo "Cloning HTTP-FLV module..."
        git clone -b ${{ env.FLV_MODULE_BRANCH }} ${{ env.FLV_MODULE_REPO }}
        
    - name: Configure and build Nginx
      shell: msys2 {0}
      run: |
        cd ${{ env.BUILD_DIR }}/nginx
        
        # 配置编译选项
        ./configure \
          --with-cc=clang \
          --with-debug \
          --prefix= \
          --sbin-path=nginx.exe \
          --conf-path=conf/nginx.conf \
          --pid-path=logs/nginx.pid \
          --error-log-path=logs/error.log \
          --http-log-path=logs/access.log \
          --with-pcre \
          --with-openssl \
          --with-http_ssl_module \
          --with-http_v2_module \
          --add-module=${{ env.BUILD_DIR }}/nginx-rtmp-module \
          --add-module=${{ env.BUILD_DIR }}/nginx-http-flv-module \
          --with-http_flv_module \
          --with-http_mp4_module
        
        # 编译
        make -j$(nproc)
        
        # 安装到发布目录
        make install DESTDIR=${{ env.DIST_DIR }}
        
    - name: Package build result
      shell: cmd
      run: |
        cd C:\nginx-build\dist
        7z a -tzip ${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}.zip *
        
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Nginx Windows Build ${{ github.ref_name }}
        body: |
          Nginx Windows版本，包含以下模块：
          - RTMP模块 (${{ env.RTMP_MODULE_REPO }}, 分支: ${{ env.RTMP_MODULE_BRANCH }})
          - HLS支持
          - HTTP-FLV模块 (${{ env.FLV_MODULE_REPO }}, 分支: ${{ env.FLV_MODULE_BRANCH }})
          - SSL模块
          - MP4支持
          
          基于Nginx v${{ env.NGINX_VERSION }}编译
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.DIST_DIR }}/${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}.zip
        asset_name: ${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}.zip
        asset_content_type: application/zip
