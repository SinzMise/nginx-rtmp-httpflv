name: Build Nginx Windows with RTMP/HLS/HTTP-FLV

on:
  push:
    branches:
      - main          # 仅当 push 到 main 时触发

env:
  NGINX_VER: 1.25.3   # 想编译哪个版本就改这里
  OPENSSL_VER: 1.1.1w
  ZLIB_VER: 1.3
  PCRE2_VER: 10.42

jobs:
  build:
    runs-on: windows-2022

    steps:
      #--------------------------------------------
      # 1. 签出官方 nginx 源码
      #--------------------------------------------
      - name: Checkout nginx
        uses: actions/checkout@v4
        with:
          repository: nginx/nginx
          ref: release-${{ env.NGINX_VER }}
          path: nginx

      #--------------------------------------------
      # 2. 签出模块源码
      #--------------------------------------------
      - name: Checkout nginx-http-flv-module
        uses: actions/checkout@v4
        with:
          repository: winshining/nginx-http-flv-module
          path: nginx/objs/lib/nginx-http-flv-module

      - name: Checkout nginx-rtmp-module
        uses: actions/checkout@v4
        with:
          repository: arut/nginx-rtmp-module
          path: nginx/objs/lib/nginx-rtmp-module

      #--------------------------------------------
      # 3. 准备编译环境
      #--------------------------------------------
      - name: Setup VS
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '[17.0,18.0)'

      - name: Setup Perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.38'

      - name: Download deps
        shell: bash
        working-directory: nginx/objs/lib
        run: |
          curl -L https://github.com/PCRE2Project/pcre2/releases/download/pcre2-${{ env.PCRE2_VER }}/pcre2-${{ env.PCRE2_VER }}.zip -o pcre2.zip
          curl -L https://zlib.net/fossils/zlib-${{ env.ZLIB_VER }}.tar.gz -o zlib.tar.gz
          curl -L https://www.openssl.org/source/openssl-${{ env.OPENSSL_VER }}.tar.gz -o openssl.tar.gz

          unzip -q pcre2.zip && mv pcre2-${{ env.PCRE2_VER }} pcre2
          tar -xzf zlib.tar.gz   && mv zlib-${{ env.ZLIB_VER }}  zlib
          tar -xzf openssl.tar.gz && mv openssl-${{ env.OPENSSL_VER }} openssl

      #--------------------------------------------
      # 4. 配置 & 编译
      #--------------------------------------------
      - name: Configure
        shell: bash
        working-directory: nginx
        run: |
          ./auto/configure ^
            --with-cc=cl ^
            --prefix= ^
            --conf-path=conf/nginx.conf ^
            --pid-path=logs/nginx.pid ^
            --http-log-path=logs/access.log ^
            --error-log-path=logs/error.log ^
            --sbin-path=nginx.exe ^
            --with-pcre=objs/lib/pcre2 ^
            --with-zlib=objs/lib/zlib ^
            --with-openssl=objs/lib/openssl ^
            --with-http_ssl_module ^
            --add-module=objs/lib/nginx-http-flv-module ^
            --add-module=objs/lib/nginx-rtmp-module

      - name: Build
        shell: cmd
        working-directory: nginx
        run: nmake -f objs/Makefile

      #--------------------------------------------
      # 5. 打包
      #--------------------------------------------
      - name: Package
        shell: bash
        run: |
          mkdir -p nginx-package
          cp nginx/objs/nginx.exe nginx-package/
          cp -r nginx/conf nginx-package/
          cp -r nginx/html nginx-package/
          cp -r nginx/docs nginx-package/
          cp -r nginx/contrib nginx-package/
          7z a nginx-windows-rtmp-hls-httpflv.zip nginx-package

      #--------------------------------------------
      # 6. 创建 Release（自动 Tag）
      #--------------------------------------------
      - name: Create Release
        id: release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.NGINX_VER }}-rtmp-hls-httpflv
          name: Nginx ${{ env.NGINX_VER }} with RTMP/HLS/HTTP-FLV (Windows x64)
          body: |
            自动编译的 Windows 版 Nginx，已集成：
            - nginx-rtmp-module
            - nginx-http-flv-module
            - OpenSSL ${{ env.OPENSSL_VER }}
            - PCRE2 ${{ env.PCRE2_VER }}
            - zlib ${{ env.ZLIB_VER }}
          files: nginx-windows-rtmp-hls-httpflv.zip
          draft: false
          prerelease: false