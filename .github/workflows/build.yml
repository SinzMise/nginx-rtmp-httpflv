name: Build Nginx Windows with RTMP/HLS/HTTP-FLV

on:
  push:
    branches: [ main ]  # 当main分支有推送时触发
  workflow_dispatch:    # 支持手动触发工作流

env:
  # 保持Nginx使用默认版本（从源码仓库获取），不指定具体版本号
  RTMP_MODULE_VERSION: 1.2.2      # nginx-rtmp-module版本
  HTTP_FLV_MODULE_VERSION: 1.2.10 # nginx-http-flv-module版本
  PCRE_VERSION: 8.45              # PCRE版本
  ZLIB_VERSION: 1.3               # Zlib版本
  OPENSSL_VERSION: 3.1.4          # OpenSSL版本
  BUILD_DIR: /c/nginx-build       # 构建目录

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-make
          git
          patch
          wget
          
    - name: Prepare build environment
      shell: msys2 {0}
      run: |
        # 创建工作目录
        mkdir -p $BUILD_DIR
        cd $BUILD_DIR
        
        # 克隆Nginx源码仓库（使用默认版本）
        git clone https://github.com/nginx/nginx.git
        cd nginx
        # 可以根据需要检出特定分支，如稳定版
        # git checkout stable-1.24
        cd ..
        
        # 下载nginx-rtmp-module
        git clone https://github.com/arut/nginx-rtmp-module.git
        cd nginx-rtmp-module
        git checkout v$RTMP_MODULE_VERSION
        cd ..
        
        # 下载nginx-http-flv-module
        git clone https://github.com/winshining/nginx-http-flv-module.git
        cd nginx-http-flv-module
        git checkout v$HTTP_FLV_MODULE_VERSION
        cd ..
        
        # 下载PCRE
        wget https://ftp.pcre.org/pub/pcre/pcre-$PCRE_VERSION.tar.gz
        tar -zxvf pcre-$PCRE_VERSION.tar.gz
        
        # 下载Zlib
        wget https://zlib.net/zlib-$ZLIB_VERSION.tar.gz
        tar -zxvf zlib-$ZLIB_VERSION.tar.gz
        
        # 下载OpenSSL
        wget https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz
        tar -zxvf openssl-$OPENSSL_VERSION.tar.gz
        
    - name: Configure and build Nginx
      shell: msys2 {0}
      run: |
        cd $BUILD_DIR/nginx
        
        # 配置编译选项，包含所需模块和指定版本的依赖
        ./auto/configure \
          --with-cc=gcc \
          --with-debug \
          --prefix= \
          --sbin-path=nginx.exe \
          --conf-path=conf/nginx.conf \
          --pid-path=logs/nginx.pid \
          --http-log-path=logs/access.log \
          --error-log-path=logs/error.log \
          --with-pcre=../pcre-$PCRE_VERSION \
          --with-zlib=../zlib-$ZLIB_VERSION \
          --with-openssl=../openssl-$OPENSSL_VERSION \
          --with-http_ssl_module \
          --with-http_flv_module \
          --with-http_mp4_module \
          --add-module=../nginx-rtmp-module \
          --add-module=../nginx-http-flv-module \
          --crossbuild=win32 \
          --with-cc-opt=-DWIN32
        
        # 编译
        make
        
        # 安装到指定目录
        make install DESTDIR=$BUILD_DIR/nginx-win
        
    - name: Package build artifacts
      shell: cmd
      run: |
        cd C:\nginx-build\nginx-win
        7z a -tzip nginx-windows-rtmp-hls-flv.zip *
        
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: build-${{ github.sha }}
        release_name: Nginx Windows Build ${{ github.sha }}
        draft: false
        prerelease: true
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: C:\nginx-build\nginx-win\nginx-windows-rtmp-hls-flv.zip
        asset_name: nginx-windows-rtmp-${{ env.RTMP_MODULE_VERSION }}-flv-${{ env.HTTP_FLV_MODULE_VERSION }}.zip
        asset_content_type: application/zip
